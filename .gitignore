my-secure-app/
├── netlify/
│   ├── functions/
│   │   └── auth.js
│   └── edge-functions/
│       └── block-third-party.js
├── public/
│   ├── index.html
│   ├── styles.css
│   └── script.js
└── netlify.toml
const allowedApps = [
  "com.your.app.package", // Your Android app ID
  "web-admin"             // Your web dashboard
];

exports.handler = async (event) => {
  const appSignature = event.headers['x-app-signature'];
  
  if (!allowedApps.includes(appSignature)) {
    return {
      statusCode: 403,
      body: JSON.stringify({ 
        error: "Unauthorized client blocked",
        timestamp: new Date().toISOString()
      })
    };
  }

  // Process legitimate requests
  return {
    statusCode: 200,
    body: JSON.stringify({ status: "Access granted" })
  };
};
export default async (request) => {
  const validReferrers = [
    "https://your-netlify-site.netlify.app",
    "android-app://com.your.app.package"
  ];

  const referrer = request.headers.get('referer') || '';
  const isAllowed = validReferrers.some(url => referrer.includes(url));

  if (!isAllowed) {
    return new Response("Blocked: Invalid source", { 
      status: 403,
      headers: { 'x-shield': 'active' }
    });
  }

  return await fetch(request);
};
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Secure App Portal</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div class="container">
    <h1>🔒 Secure Connection</h1>
    <div id="auth-status">Verifying access...</div>
    <button id="requestData">Fetch Secure Data</button>
  </div>
  <script src="script.js"></script>
</body>
</html>
document.getElementById('requestData').addEventListener('click', async () => {
  try {
    const response = await fetch('/.netlify/functions/auth', {
      headers: {
        'X-App-Signature': 'web-admin' // Web client identifier
      }
    });
    
    const data = await response.json();
    document.getElementById('auth-status').textContent = 
      response.ok ? `✅ ${data.status}` : `❌ ${data.error}`;
  } catch (error) {
    document.getElementById('auth-status').textContent = '🚨 Connection blocked';
  }
});
[build]
  command = "echo 'No build required'"
  publish = "public"

[[edge_functions]]
  path = "/*"
  function = "block-third-party"

[functions]
  directory = "netlify/functions"
val okHttpClient = OkHttpClient.Builder()
    .addInterceptor { chain ->
        val request = chain.request().newBuilder()
            .addHeader("X-App-Signature", BuildConfig.APPLICATION_ID)
            .build()
        chain.proceed(request)
    }
    .build()